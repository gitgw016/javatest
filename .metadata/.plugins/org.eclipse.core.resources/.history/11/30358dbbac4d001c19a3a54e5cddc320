package client_chat;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.net.InetAddress;
import java.net.Socket;
import java.net.URL;
import java.net.UnknownHostException;
import java.util.ResourceBundle;

import javafx.application.Platform;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Button;
import javafx.scene.control.ListView;
import javafx.scene.control.TextArea;
import javafx.scene.control.TextField;

public class ClientController implements Initializable {
	
	@FXML private TextArea txtDisplay;
	@FXML private TextField txtIp, txtNick, txtInput;
	@FXML private ListView<String> listView;
	@FXML private Button btnConn, btnSend;
	
	// 연결된 서버 소켓 정보
	Socket server;
	// 연결 요청을 보낼 server ip 주소
	InetAddress ip;
	// 사용자 닉네임
	String nickName;
	
	// 서버로 데이터 출력
	PrintWriter pw;
	// 서버에서 데이터를 읽음
	BufferedReader br;

	@Override
	public void initialize(URL location, ResourceBundle resources) {
		Platform.runLater(()->{
			txtIp.requestFocus();
		});
		
		btnConn.setOnAction(event->{
			// client 시작
			try {
				String textIP = txtIp.getText().trim();
				if(textIP.equals("")) {
					displayText("<!!아이피 주소를 확인하라!!>");
					txtIp.requestFocus();
					return;
				}// 문자열 ipv4주소 값을 받아서 address로 반환
				// 정상적인 ip주소나 Domain이 아니면 Exception 발생
				ip = InetAddress.getByName(textIP);
				
				String nick = txtNick.getText().trim();
				if(nick.equals("")) {
					displayText("<!!닉네임을 작성하라!!>");
					txtNick.requestFocus();
					return;
				}
				
				nickName = nick;
				startClient();
			} catch (UnknownHostException e) {
				displayText("<!!주소 못쓴다. 확인하라!!>");
				txtIp.requestFocus();
			}
		});
		
		// send event
		btnSend.setOnAction(event->{
			String text = txtInput.getText().trim();
			if(text.equals("")) {
				displayText("메세지를 작성하라");
				return;
			}
			send(1,text);
		});
	}
	// client 시작
	public void startClient() {
		try {
			server = new Socket(ip,5001);
			displayText("<연결됐다>."+server.getRemoteSocketAddress());
			
			pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(server.getOutputStream())),true);
			br = new BufferedReader(new InputStreamReader(server.getInputStream()));
			
			Platform.runLater(()->{
				btnSend.setDisable(false);
			});
			send(0,nickName);
		} catch (IOException e) {
			displayText("!!연결불가. ip를 확인하라!!"+ip);
			stopClient();
			return;
		}
	}
	// client 종료
	public void stopClient() {
		
	}
	// 서버에 정보를 전달
	// num == 0 : 닉네임 전달
	// num == 1 : 메세지 전달
	public void send(int num, String text) {
		// 0 | 닉네임 , 1 | 메세지
		pw.println(num+"|"+text);
		displayText("보내기 완료 : "+text);
		txtInput.clear();
		txtInput.requestFocus();
	}
	
	// 서버에서 메세지를 전달 받음
	public void receive() {
		new Thread(()->{
			while(true) {
				try {
					String receiveData = br.readLine();
					// 0|사용자 목록
					// 1|nickName+message
					String[] data = receiveData.split("\\|");
					String code = data[0];
					String text = data[1];
					if(code.equals("0")) {
						// listView 사용자 목록 갱신
						
					}else if(code.equals("1")) {
						// message 출력
						displayText(text);
					}
				} catch (IOException e) {
					stopClient();
					break;
				}
			}
		}).start();
	}
	
	// textArea에 text 추가
	public void displayText(String text) {
		Platform.runLater(()->{
			txtDisplay.appendText(text+"\n");
		});
	}

}
